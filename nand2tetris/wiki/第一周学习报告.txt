{{Template:个人学习报告
|天=一
|日期=2019年9月16日
|报告主题=计算思维课程初体验
|关键词=计算思维，团队协作，层次结构，通用性
|摘要=现代人已经习惯在计算机的高阶层面上工作很久了，设计理念以及计算思维的缺失与不可延续使得现在的电子产品创新乏善可陈。我们需要从最简单的指令开始，学习计算思维，充分利用现代化的学习资源与团队协作，在计算机的不同层次上制造通用型。

|课程回顾=
#这是一个需要高度协作的项目，所以老师在课堂的最开始就请大家依次介绍自己。很明显可以发现有的同学有很深厚的编程基础，有的同学虽然自称技术小白，但其思维却不输任何人。在这样的一个团队中，我觉得每个人都能充分发挥自己的特长，最终尽善尽美完成我们的项目。（虽然感觉会走一部分人）
#在自我介绍完成后，老师先讲述了一些历史性的东西，包括计算机、计算思维、一些主要贡献者及其成就，然后介绍了这门课程的主要理念，向我们描述了这门课程的教学大纲及最终要实现的目标。
#接下来，老师介绍了我们这门课程的实践基础、一个指导网站nand2tetris、国外的相关课程及其实践者。老师讲述了他自己实践的经历，也告诉我们这个项目七八岁的孩子都能顺利完成。这听起来鼓励的成分挺明显的，但我觉得如果我能亲力亲为完成参与这个项目，仍然是一件意义非凡的事情。
#接下来，老师介绍了计算机的六个层次及（部分）每个层次上的通用型。我们需要在理解各个通用指令的基础上进行架构。
#*这六个层次（及其基本指令）大致是 （对应可能有误，后期修改）
#*#Chips & Logic Gates (nand)
#*#Hardware Platform (minus)
#*#Machine Language (move)
#*#Assembly Language
#*#Virtual Machine
#*#High Level Language & Operating System
#在这之后，老师阐述了各种语言模式，具体回想可能没法一一列举，但好像只要一出现就能识别出来。其中让我印象最深刻的是λ演算语言。这种语言似乎可以用来描述一切其他语言模式，并且连最开始的True和False都可以进行明确定义。
#随后，我们进行了初步实践，尝试了一下自己定义出And指令。这样的尝试非常有意思，虽然我好像写出了一个可能的答案，被老师评价不够简洁，但我仍然对这门课充满信心和期待。
#课后，我学习了wiki的编辑方法，提交了个人简历并撰写了这份工作报告。因为有其他活动，没能完整地看完课件内容及出版物，希望以后有空能补上。
|课程思考=
现代人已经习惯在计算机的高阶层面上工作很久了，设计理念以及计算思维的缺失与不可延续使得现在的电子产品创新乏善可陈。我们需要从最简单的指令开始，学习计算思维，充分利用现代化的学习资源与团队协作，在计算机的不同层次上制造通用型。这个项目一听就很让人热血沸腾。我希望能在这门课程里充分激发自己的学习能力及团队协作能力，并培养新的计算思维。
|参考文献具体内容=
无

}}

